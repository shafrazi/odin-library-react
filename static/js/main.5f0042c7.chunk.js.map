{"version":3,"sources":["components/Header.js","components/BookCard.js","components/Form.js","Book.js","App.js","index.js"],"names":["Header","props","className","onClick","BookCard","this","book","title","author","pages","src","coverImage","alt","type","name","checked","isRead","onChange","event","changeRead","size","color","editBook","deleteBook","React","Component","Form","placeholder","value","handleChange","isbn","formMode","saveBook","handleClick","hideModal","Book","book1","book2","App","state","books","currentBook","modalState","display","editBookIsbn","displayForm","bind","createBook","setState","preventDefault","persist","target","prevState","push","i","length","splice","editedBook","bookCardComponents","map","key","style","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f0042c7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1 className=\"logo\">My Library</h1>\n      <button onClick={props.onClick} className=\"btn  btn-primary\">\n        Add New Book\n      </button>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\n\nclass BookCard extends React.Component {\n  render() {\n    return (\n      <div className=\"book-card\">\n        <h3>{this.props.book.title}</h3>\n        <p>{this.props.book.author}</p>\n        <p>{this.props.book.pages} pages</p>\n        <img src={this.props.book.coverImage} alt=\"book\" />\n        <br></br>\n        <label>\n          Mark as read :\n          <input\n            type=\"checkbox\"\n            className=\"read-check\"\n            name=\"isRead\"\n            checked={this.props.book.isRead}\n            onChange={(event) => {\n              this.props.changeRead(event, this.props.book);\n            }}\n          />\n        </label>\n        <br />\n\n        <FaEdit\n          className=\"icon-btn\"\n          size=\"20px\"\n          color=\"#31bebe\"\n          onClick={() => {\n            this.props.editBook(this.props.book);\n          }}\n        />\n\n        <FaTrashAlt\n          className=\"icon-btn\"\n          size=\"20px\"\n          color=\"#ed487f\"\n          onClick={() => {\n            this.props.deleteBook(this.props.book);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BookCard;\n","import React from \"react\";\n\nclass Form extends React.Component {\n  render() {\n    return (\n      <div className=\"form-div\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Book Title\"\n            name=\"title\"\n            value={this.props.book.title}\n            onChange={this.props.handleChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Author\"\n            name=\"author\"\n            value={this.props.book.author}\n            onChange={this.props.handleChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"ISBN\"\n            name=\"isbn\"\n            value={this.props.book.isbn}\n            onChange={this.props.handleChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"No. of pages\"\n            name=\"pages\"\n            value={this.props.book.pages}\n            onChange={this.props.handleChange}\n          />\n          <label>\n            Mark as read :\n            <input\n              type=\"checkbox\"\n              name=\"isRead\"\n              onChange={this.props.handleChange}\n              checked={this.props.book.isRead}\n              className=\"form-check\"\n            />\n          </label>\n          <button\n            className=\"btn btn-primary\"\n            onClick={\n              this.props.formMode === \"edit\"\n                ? this.props.saveBook\n                : this.props.handleClick\n            }\n          >\n            {this.props.formMode === \"edit\" ? \"Save\" : \"Add Book\"}\n          </button>\n          <button className=\"btn btn-danger\" onClick={this.props.hideModal}>\n            Cancel\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","class Book {\n  constructor(title, isbn, author, pages, isRead) {\n    this.title = title;\n    this.isbn = isbn;\n    this.author = author;\n    this.pages = pages;\n    this.isRead = isRead;\n    this.coverImage = `http://covers.openlibrary.org/b/isbn/${this.isbn}-M.jpg`;\n  }\n}\n\nexport default Book;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport BookCard from \"./components/BookCard\";\nimport Form from \"./components/Form\";\nimport Book from \"./Book\";\n\nconst book1 = new Book(\n  \"Man's search for meaning\",\n  \"080701429X\",\n  \"Viktor E Frankl\",\n  246,\n  true\n);\n\nconst book2 = new Book(\n  \"The Waste Lands\",\n  \"0451210867\",\n  \"Stephen King\",\n  608,\n  false\n);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [book1, book2],\n      currentBook: {\n        title: \"\",\n        author: \"\",\n        isbn: \"\",\n        pages: \"\",\n        isRead: false,\n      },\n      modalState: {\n        display: \"none\",\n      },\n      formMode: \"\",\n      editBookIsbn: \"\",\n    };\n\n    this.displayForm = this.displayForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createBook = this.createBook.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.editBook = this.editBook.bind(this);\n    this.saveBook = this.saveBook.bind(this);\n    this.deleteBook = this.deleteBook.bind(this);\n    this.changeRead = this.changeRead.bind(this);\n  }\n\n  displayForm() {\n    this.setState({\n      currentBook: {\n        title: \"\",\n        author: \"\",\n        isbn: \"\",\n        pages: \"\",\n        isRead: false,\n      },\n      modalState: {\n        display: \"block\",\n      },\n      formMode: \"new\",\n    });\n  }\n\n  hideModal(event) {\n    event.preventDefault();\n    this.setState({\n      modalState: {\n        display: \"none\",\n      },\n    });\n  }\n\n  handleChange(event) {\n    event.persist();\n    if (event.target.type === \"checkbox\") {\n      this.setState((prevState) => {\n        return {\n          currentBook: {\n            ...prevState.currentBook,\n            [event.target.name]: event.target.checked,\n          },\n        };\n      });\n    } else {\n      this.setState((prevState) => {\n        return {\n          currentBook: {\n            ...prevState.currentBook,\n            [event.target.name]: event.target.value,\n          },\n        };\n      });\n    }\n  }\n\n  createBook(event) {\n    event.preventDefault();\n    const book = new Book(\n      this.state.currentBook.title,\n      this.state.currentBook.isbn,\n      this.state.currentBook.author,\n      this.state.currentBook.pages,\n      this.state.currentBook.isRead\n    );\n\n    this.setState((prevState) => {\n      prevState.books.push(book);\n      return {\n        books: prevState.books,\n      };\n    });\n  }\n\n  editBook(book) {\n    this.displayForm();\n    this.setState({\n      currentBook: book,\n      formMode: \"edit\",\n      editBookIsbn: book.isbn,\n    });\n  }\n\n  deleteBook(book) {\n    this.setState((prevState) => {\n      for (let i = 0; i < prevState.books.length; i++) {\n        if (prevState.books[i].isbn === book.isbn) {\n          prevState.books.splice(i, 1);\n        }\n      }\n      return {\n        books: prevState.books,\n      };\n    });\n  }\n\n  saveBook(event) {\n    event.preventDefault();\n    this.setState((prevState) => {\n      for (let i = 0; i < prevState.books.length; i++) {\n        if (prevState.books[i].isbn === prevState.editBookIsbn) {\n          prevState.books.splice(i, 1);\n        }\n      }\n      const editedBook = new Book(\n        this.state.currentBook.title,\n        this.state.currentBook.isbn,\n        this.state.currentBook.author,\n        this.state.currentBook.pages,\n        this.state.currentBook.isRead\n      );\n      prevState.books.push(editedBook);\n      return {\n        books: prevState.books,\n      };\n    });\n    this.hideModal(event);\n  }\n\n  changeRead(event, book) {\n    event.persist();\n    this.setState((prevState) => {\n      for (let i = 0; i < prevState.books.length; i++) {\n        if (prevState.books[i] === book) {\n          book.isRead = event.target.checked;\n          prevState.books.splice(i, 1, book);\n          // prevState.books.push(book);\n        }\n      }\n      return {\n        books: prevState.books,\n      };\n    });\n  }\n\n  render() {\n    const bookCardComponents = this.state.books.map((book) => {\n      return (\n        <BookCard\n          key={book.isbn}\n          book={book}\n          editBook={this.editBook}\n          deleteBook={this.deleteBook}\n          changeRead={this.changeRead}\n        />\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <Header onClick={this.displayForm} />\n        <div className=\"modal\" style={this.state.modalState}>\n          <Form\n            book={this.state.currentBook}\n            handleChange={this.handleChange}\n            handleClick={this.createBook}\n            hideModal={this.hideModal}\n            saveBook={this.saveBook}\n            formMode={this.state.formMode}\n          />\n        </div>\n        <div className=\"books-container\">{bookCardComponents}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}